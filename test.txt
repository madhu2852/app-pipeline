data "aws_iam_policy_document" "lambda-assume-role-policy" {
  statement {
    actions = ["sts:AssumeRole"]
    principals {
      type        = "Service"
      identifiers = ["lambda.amazonaws.com"]
    }
  }  
}

data "aws_iam_policy_document" "lambda_policy" {
  statement {
    sid = "AllowActions"
    actions = [
          "ec2:CreateNetworkInterface",
          "ec2:DetachNetworkInterface",
          "autoscaling:CompleteLifecycleAction",
          "ec2:ModifyNetworkInterfaceAttribute",
          "ec2:DeleteNetworkInterface",
          "autoscaling:PutLifecycleHook",
          "autoscaling:DetachLoadBalancerTargetGroups",
          "ec2:AttachNetworkInterface",
          "autoscaling:TerminateInstanceInAutoScalingGroup",
          "autoscaling:AttachLoadBalancerTargetGroups",
          "ec2:DeleteTags",
          "ec2:CreateTags",                    
      ]
    resources = [
      "arn:aws:autoscaling:*:xxx:autoScalingGroup:*:autoScalingGroupName/*",
      "arn:aws:ec2:*:xxx:instance/*",
      "arn:aws:ec2:*:xxx:network-interface/*",
      "arn:aws:ec2:*:xxx:subnet/*",
      "arn:aws:ec2:*:xxx:security-group/*"      
    ]
  }
  statement {
    sid = "AllowActionsLogs"
    actions = [
        "logs:*"
      ]
    resources = [
      "arn:aws:logs:*:*:*"
    ]
  }
  statement {
    sid = "DescribeActions"
    actions = [
          "ec2:DescribeInstances",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DescribeAvailabilityZones",
          "ec2:DescribeNetworkInterfaceAttribute",
          "ec2:DescribeSubnets"
      ]
    resources = [
      "*"
    ]
  }    
}


resource "aws_iam_policy" "lambda_policy" {
  name   = "jenkins_lc_policy"
  policy = data.aws_iam_policy_document.lambda_policy.json
}

resource "aws_iam_role" "lambda_role" {
  name               = "lambda_role"
  path               = "/system/"
  depends_on = [
    aws_iam_policy.lambda_policy,
  ]
  assume_role_policy = data.aws_iam_policy_document.lambda-assume-role-policy.json
  managed_policy_arns = [aws_iam_policy.lambda_policy.arn]
}
